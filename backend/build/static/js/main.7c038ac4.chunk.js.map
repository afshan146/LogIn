{"version":3,"sources":["store/UserStore.js","InputField.js","SubmitButton.js","store/ColDef.js","LoginForm.js","App.js","serviceWorker.js","index.js"],"names":["extendObservable","this","loading","isLoggedIn","username","userPriority","InputField","className","type","props","placeholder","value","onChange","e","target","React","Component","SubmitButton","disabled","onClick","text","columnDefs","headerName","field","checkboxSelection","defaultColDef","flex","minWidth","sortable","filter","editable","resizable","rowData","role_name","recommended_title","role_description","role_family","org_level_1","org_level_2","org_level_3","pred_soc_1","pred_name1","pred_soc_2","pred_name2","pred_soc_3","pred_name3","compo_bracket","total_fte","has_reports_ratio","has_mgr_reports_ratio","Description","LoginForm","state","password","buttonDisabled","property","val","trim","length","setState","fetch","method","headers","body","JSON","stringify","res","json","result","success","UserStore","ColDefinition","resetForm","alert","msg","console","log","setInputValue","doLogin","App","doLogout","style","width","height","rowSelection","onGridReady","params","gridApi","api","observer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7c038ac4.chunk.js","sourcesContent":["import { extendObservable } from \"mobx\";\r\n\r\nclass UserStore {\r\n  constructor() {\r\n    extendObservable(this, {\r\n      loading: true,\r\n      isLoggedIn: false,\r\n      username: \"\",\r\n      userPriority: 1\r\n    });\r\n  }\r\n}\r\n\r\nexport default new UserStore();\r\n","import React from \"react\";\r\n\r\nclass InputField extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"inputField\">\r\n        <input\r\n          className=\"input\"\r\n          type={this.props.type}\r\n          placeholder={this.props.placeholder}\r\n          value={this.props.value}\r\n          onChange={(e) => this.props.onChange(e.target.value)}\r\n        ></input>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputField;\r\n","import React from \"react\";\r\n\r\nclass SubmitButton extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"submitButton\">\r\n        <button\r\n          className=\"btn\"\r\n          disabled={this.props.disabled}\r\n          onClick={() => this.props.onClick()}\r\n        >\r\n          {this.props.text}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubmitButton;\r\n","import { extendObservable } from \"mobx\";\r\n\r\nclass ColDefinition {\r\n    constructor() {\r\n        extendObservable(this, {\r\n            columnDefs: [\r\n                {\r\n                    headerName: \"role_name\",\r\n                    field: \"role_name\",\r\n                    checkboxSelection: false,\r\n                },\r\n                {\r\n                    headerName: \"recommended_title\",\r\n                    field: \"recommended_title\",\r\n                },\r\n                {\r\n                    headerName: \"role_description\",\r\n                    field: \"role_description\",\r\n                },\r\n                {\r\n                    headerName: \"role_family\",\r\n                    field: \"role_family\",\r\n                },\r\n                {\r\n                    headerName: \"org_level_1\",\r\n                    field: \"org_level_1\",\r\n                },\r\n                {\r\n                    headerName: \"org_level_2\",\r\n                    field: \"org_level_2\",\r\n                },\r\n                {\r\n                    headerName: \"org_level_3\",\r\n                    field: \"org_level_3\",\r\n                },\r\n                {\r\n                    headerName: \"pred_soc_1\",\r\n                    field: \"pred_soc_1\",\r\n                },\r\n                {\r\n                    headerName: \"pred_name1\",\r\n                    field: \"pred_name1\",\r\n                },\r\n                {\r\n                    headerName: \"pred_soc_2\",\r\n                    field: \"pred_soc_2\",\r\n                },\r\n                {\r\n                    headerName: \"pred_name2\",\r\n                    field: \"pred_name2\",\r\n                },\r\n                {\r\n                    headerName: \"pred_soc_3\",\r\n                    field: \"pred_soc_3\",\r\n                },\r\n                {\r\n                    headerName: \"pred_name3\",\r\n                    field: \"pred_name3\",\r\n                },\r\n                {\r\n                    headerName: \"compo_bracket\",\r\n                    field: \"compo_bracket\",\r\n                },\r\n                {\r\n                    headerName: \"total_fte\",\r\n                    field: \"total_fte\",\r\n                },\r\n                {\r\n                    headerName: \"has_reports_ratio\",\r\n                    field: \"has_reports_ratio\",\r\n                },\r\n                {\r\n                    headerName: \"has_mgr_reports_ratio\",\r\n                    field: \"has_mgr_reports_ratio\",\r\n                },\r\n                {\r\n                    headerName: \"New Job\",\r\n                    field: \"New Job\",\r\n                },\r\n                {\r\n                    headerName: \"Review Required\",\r\n                    field: \"Review Required\",\r\n                },\r\n                {\r\n                    headerName: \"Selected SOC Code\",\r\n                    field: \"Selected SOC Code\",\r\n                },\r\n                {\r\n                    headerName: \"Selected SOC Name\",\r\n                    field: \"Selected SOC Name\",\r\n                },\r\n                {\r\n                    headerName: \"Description\",\r\n                    field: \"Description\",\r\n                },\r\n            ],\r\n            defaultColDef: {\r\n                flex: 1,\r\n                minWidth: 110,\r\n                sortable: true,\r\n                filter: true,\r\n                editable: false,\r\n                resizable: true,\r\n            },\r\n            rowData: [\r\n                {\r\n                    role_name:\r\n                        \"[ASST] MGR, CUST INSIGHTS & ANALYTICS, CUSTOMER RESPONSIVENESS DEPARTMENT\",\r\n                    recommended_title:\r\n                        \"Asst MGR Cust Insights and Analytics Customer Responsiveness Department\",\r\n                    role_description: \"\",\r\n                    role_family: \"\",\r\n                    org_level_1: \"Service Delivery\",\r\n                    org_level_2: \"Customer Insights and Analytics\",\r\n                    org_level_3: \"\",\r\n                    pred_soc_1: \"43-4051.00\",\r\n                    pred_name1: \"Customer Service Representatives\",\r\n                    pred_soc_2: \"43-6014.00\",\r\n                    pred_name2:\r\n                        \"Secretaries and Administrative Assistants, Except Legal, Medical, and Executive\",\r\n                    pred_soc_3: \"42-1046.00\",\r\n                    pred_name3:\r\n                        \"First-Line Supervisor of Customer Service Representatives\",\r\n                    compo_bracket: \"Mid\",\r\n                    total_fte: 1,\r\n                    has_reports_ratio: \"\",\r\n                    has_mgr_reports_ratio: \"\",\r\n                    \"New Job\": \"\",\r\n                    \"Review Required\": \"\",\r\n                    \"Selected SOC Code\": \"\",\r\n                    \"Selected SOC Name\": \"\",\r\n                    Description: \"\",\r\n                },\r\n                {\r\n                    role_name: \"[Senior]Manager  (Service Centre)\",\r\n                    recommended_title: \"Senior Manager\",\r\n                    role_description: \"\",\r\n                    role_family: \"\",\r\n                    org_level_1: \"Service Delivery\",\r\n                    org_level_2: \"Customer Service and Engagement\",\r\n                    org_level_3: \"\",\r\n                    pred_soc_1: \"42-1046.00\",\r\n                    pred_name1:\r\n                        \"First-Line Supervisor of Customer Service Representatives\",\r\n                    pred_soc_2: \"43-3031.00\",\r\n                    pred_name2: \"Bookkeeping, Accounting, and Auditing Clerks\",\r\n                    pred_soc_3: \"42-1009.00\",\r\n                    pred_name3: \"Project Managers\",\r\n                    compo_bracket: \"Mid\",\r\n                    total_fte: 37,\r\n                    has_reports_ratio: \"\",\r\n                    has_mgr_reports_ratio: \"\",\r\n                    \"New Job\": \"\",\r\n                    \"Review Required\": \"\",\r\n                    \"Selected SOC Code\": \"\",\r\n                    \"Selected SOC Name\": \"\",\r\n                    Description: \"\",\r\n                },\r\n                {\r\n                    role_name: \"[Senior]Manager (Call Centre)\",\r\n                    recommended_title: \"Senior Manager\",\r\n                    role_description: \"\",\r\n                    role_family: \"\",\r\n                    org_level_1: \"Service Delivery\",\r\n                    org_level_2: \"Customer Service and Engagement\",\r\n                    org_level_3: \"\",\r\n                    pred_soc_1: \"42-1046.00\",\r\n                    pred_name1:\r\n                        \"First-Line Supervisor of Customer Service Representatives\",\r\n                    pred_soc_2: \"43-3031.00\",\r\n                    pred_name2: \"Bookkeeping, Accounting, and Auditing Clerks\",\r\n                    pred_soc_3: \"42-1009.00\",\r\n                    pred_name3: \"Project Managers\",\r\n                    compo_bracket: \"Mid\",\r\n                    total_fte: 37,\r\n                    has_reports_ratio: \"\",\r\n                    has_mgr_reports_ratio: \"\",\r\n                    \"New Job\": \"\",\r\n                    \"Review Required\": \"\",\r\n                    \"Selected SOC Code\": \"\",\r\n                    \"Selected SOC Name\": \"\",\r\n                    Description: \"\",\r\n                },\r\n                {\r\n                    role_name: \"AD,  Applications\",\r\n                    recommended_title: \"AD Applications\",\r\n                    role_description: \"\",\r\n                    role_family: \"Regulatory Case Processing\",\r\n                    org_level_1: \"Management\",\r\n                    org_level_2: \"OPS\",\r\n                    org_level_3: \"WPD\",\r\n                    pred_soc_1: \"42-1042.00\",\r\n                    pred_name1: \"Applications Services Managers\",\r\n                    pred_soc_2: \"15-1132.00\",\r\n                    pred_name2: \"Software Developers, Applications\",\r\n                    pred_soc_3: \"42-1012.00\",\r\n                    pred_name3: \"Interns\",\r\n                    compo_bracket: \"Mid\",\r\n                    total_fte: 1,\r\n                    has_reports_ratio: \"\",\r\n                    has_mgr_reports_ratio: \"\",\r\n                    \"New Job\": \"\",\r\n                    \"Review Required\": \"\",\r\n                    \"Selected SOC Code\": \"\",\r\n                    \"Selected SOC Name\": \"\",\r\n                    Description: \"\",\r\n                },\r\n                {\r\n                    role_name: \"AD, Compliance Ops & Mgt\",\r\n                    recommended_title: \"AD Compliance Operations and Mgt\",\r\n                    role_description:\r\n                        \"This team is responsible for driving the Employment Act compliance through effective detection, intervention and deterrence measures.\",\r\n                    role_family: \"Enforcement & Compliance\",\r\n                    org_level_1: \"Management\",\r\n                    org_level_2: \"OPS\",\r\n                    org_level_3: \"LRWD\",\r\n                    pred_soc_1: \"42-1060.00\",\r\n                    pred_name1: \"Compliance Officers\",\r\n                    pred_soc_2: \"11-9199.02\",\r\n                    pred_name2: \"Compliance Managers\",\r\n                    pred_soc_3: \"43-9061.00\",\r\n                    pred_name3: \"Office Clerks, General\",\r\n                    compo_bracket: \"Mid\",\r\n                    total_fte: 1,\r\n                    has_reports_ratio: \"\",\r\n                    has_mgr_reports_ratio: \"\",\r\n                    \"New Job\": \"\",\r\n                    \"Review Required\": \"\",\r\n                    \"Selected SOC Code\": \"\",\r\n                    \"Selected SOC Name\": \"\",\r\n                    Description: \"\",\r\n                },\r\n                {\r\n                    role_name: \"AD, Construction & Process\",\r\n                    recommended_title: \"AD Construction and Process\",\r\n                    role_description: \"\",\r\n                    role_family: \"Regulatory Case Processing\",\r\n                    org_level_1: \"Management\",\r\n                    org_level_2: \"OPS\",\r\n                    org_level_3: \"WPD\",\r\n                    pred_soc_1: \"43-9061.00\",\r\n                    pred_name1: \"Office Clerks, General\",\r\n                    pred_soc_2: \"25-9031.01\",\r\n                    pred_name2: \"Instructional Designers and Technologists\",\r\n                    pred_soc_3: \"11-9021.00\",\r\n                    pred_name3: \"Construction Managers\",\r\n                    compo_bracket: \"Mid\",\r\n                    total_fte: 1,\r\n                    has_reports_ratio: \"\",\r\n                    has_mgr_reports_ratio: \"\",\r\n                    \"New Job\": \"\",\r\n                    \"Review Required\": \"\",\r\n                    \"Selected SOC Code\": \"\",\r\n                    \"Selected SOC Name\": \"\",\r\n                    Description: \"\",\r\n                },\r\n                {\r\n                    role_name: \"AD, Corp Admin\",\r\n                    recommended_title: \"AD Corporate Administration\",\r\n                    role_description: \"\",\r\n                    role_family: \"Corporate Administration\",\r\n                    org_level_1: \"Management\",\r\n                    org_level_2: \"CSG\",\r\n                    org_level_3: \"CPMD\",\r\n                    pred_soc_1: \"43-6014.00\",\r\n                    pred_name1:\r\n                        \"Secretaries and Administrative Assistants, Except Legal, Medical, and Executive\",\r\n                    pred_soc_2: \"43-9061.00\",\r\n                    pred_name2: \"Office Clerks, General\",\r\n                    pred_soc_3: \"15-1142.00\",\r\n                    pred_name3: \"Network and Computer Systems Administrators\",\r\n                    compo_bracket: \"Mid\",\r\n                    total_fte: 1,\r\n                    has_reports_ratio: \"\",\r\n                    has_mgr_reports_ratio: \"\",\r\n                    \"New Job\": \"\",\r\n                    \"Review Required\": \"\",\r\n                    \"Selected SOC Code\": \"\",\r\n                    \"Selected SOC Name\": \"\",\r\n                    Description: \"\",\r\n                },\r\n                {\r\n                    role_name: \"AD, Customer Ops (Manufacturing)\",\r\n                    recommended_title: \"AD Customer Operations\",\r\n                    role_description: \"\",\r\n                    role_family: \"Regulatory Case Processing\",\r\n                    org_level_1: \"Management\",\r\n                    org_level_2: \"OPS\",\r\n                    org_level_3: \"WPD\",\r\n                    pred_soc_1: \"43-4051.00\",\r\n                    pred_name1: \"Customer Service Representatives\",\r\n                    pred_soc_2: \"42-1049.00\",\r\n                    pred_name2: \"Customer Experience Analysts\",\r\n                    pred_soc_3: \"43-9061.00\",\r\n                    pred_name3: \"Office Clerks, General\",\r\n                    compo_bracket: \"Mid\",\r\n                    total_fte: 8,\r\n                    has_reports_ratio: \"\",\r\n                    has_mgr_reports_ratio: \"\",\r\n                    \"New Job\": \"\",\r\n                    \"Review Required\": \"\",\r\n                    \"Selected SOC Code\": \"\",\r\n                    \"Selected SOC Name\": \"\",\r\n                    Description: \"\",\r\n                },\r\n                {\r\n                    role_name: \"Administrative Executive\",\r\n                    recommended_title: \"Administrative Executive\",\r\n                    role_description: \"\",\r\n                    role_family: \"\",\r\n                    org_level_1: \"Administration\",\r\n                    org_level_2: \"General office management / administration support\",\r\n                    org_level_3: \"\",\r\n                    pred_soc_1: \"43-6014.00\",\r\n                    pred_name1:\r\n                        \"Secretaries and Administrative Assistants, Except Legal, Medical, and Executive\",\r\n                    pred_soc_2: \"43-6011.00\",\r\n                    pred_name2:\r\n                        \"Executive Secretaries and Executive Administrative Assistants\",\r\n                    pred_soc_3: \"11-3011.00\",\r\n                    pred_name3: \"Administrative Services Managers\",\r\n                    compo_bracket: \"Low\",\r\n                    total_fte: 2,\r\n                    has_reports_ratio: \"\",\r\n                    has_mgr_reports_ratio: \"\",\r\n                    \"New Job\": \"\",\r\n                    \"Review Required\": \"\",\r\n                    \"Selected SOC Code\": \"\",\r\n                    \"Selected SOC Name\": \"\",\r\n                    Description: \"\",\r\n                },\r\n                {\r\n                    role_name: \"Administrative Executive \",\r\n                    recommended_title: \"Administrative Executive\",\r\n                    role_description: \"\",\r\n                    role_family: \"\",\r\n                    org_level_1: \"Education\",\r\n                    org_level_2: \"Non-teaching role\",\r\n                    org_level_3: \"\",\r\n                    pred_soc_1: \"43-6014.00\",\r\n                    pred_name1:\r\n                        \"Secretaries and Administrative Assistants, Except Legal, Medical, and Executive\",\r\n                    pred_soc_2: \"43-6011.00\",\r\n                    pred_name2:\r\n                        \"Executive Secretaries and Executive Administrative Assistants\",\r\n                    pred_soc_3: \"11-3011.00\",\r\n                    pred_name3: \"Administrative Services Managers\",\r\n                    compo_bracket: \"Low\",\r\n                    total_fte: 2,\r\n                    has_reports_ratio: \"\",\r\n                    has_mgr_reports_ratio: \"\",\r\n                    \"New Job\": \"\",\r\n                    \"Review Required\": \"\",\r\n                    \"Selected SOC Code\": \"\",\r\n                    \"Selected SOC Name\": \"\",\r\n                    Description: \"\",\r\n                },\r\n            ]\r\n        });\r\n    }\r\n}\r\n\r\nexport default new ColDefinition();\r\n","import React from \"react\";\r\nimport InputField from \"./InputField\";\r\nimport SubmitButton from \"./SubmitButton\";\r\nimport UserStore from \"./store/UserStore\";\r\n\r\nimport ColDefinition from \"./store/ColDef\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\n\r\nclass LoginForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      buttonDisabled: false,\r\n    };\r\n  }\r\n\r\n  setInputValue(property, val) {\r\n    val = val.trim();\r\n    if (val.length > 12) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      [property]: val,\r\n    });\r\n  }\r\n\r\n  resetForm() {\r\n    this.setState({\r\n      username: \"\",\r\n      password: \"\",\r\n      buttonDisabled: false,\r\n    });\r\n  }\r\n\r\n  async doLogin() {\r\n    if (!this.state.username) {\r\n      return;\r\n    }\r\n    if (!this.state.password) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      buttonDisabled: true,\r\n    });\r\n\r\n    try {\r\n      let res = await fetch(\"./login\", {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Accept\": \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          username: this.state.username,\r\n          password: this.state.password,\r\n        }),\r\n      });\r\n\r\n      let result = await res.json();\r\n      if (result && result.success) {\r\n        UserStore.isLoggedIn = true;\r\n        UserStore.username = result.username;\r\n        UserStore.userPriority = result.userPriority;\r\n\r\n        //validate ag-grid according to user priority\r\n        if (UserStore.userPriority === 1) {\r\n          ColDefinition.defaultColDef.editable = true;\r\n          ColDefinition.columnDefs[0].checkboxSelection = true;\r\n        }\r\n        else if (UserStore.userPriority === 2) {\r\n          ColDefinition.defaultColDef.editable = false;\r\n          ColDefinition.columnDefs[0].checkboxSelection = false;\r\n        }\r\n        //AgGridReact.gridApi.refreshCells();\r\n      } else if (result && result.success === false) {\r\n        this.resetForm();\r\n        alert(result.msg);\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n      this.resetForm();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"loginForm\">\r\n        Log in\r\n        <InputField\r\n          type=\"text\"\r\n          placeholder=\"username\"\r\n          value={this.state.username ? this.state.username : \"\"}\r\n          onChange={(val) => this.setInputValue(\"username\", val)}\r\n        />\r\n        <InputField\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={this.state.password ? this.state.password : \"\"}\r\n          onChange={(val) => this.setInputValue(\"password\", val)}\r\n        />\r\n        <SubmitButton\r\n          text=\"Login\"\r\n          disabled={this.state.buttonDisabled}\r\n          onClick={() => this.doLogin()}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport UserStore from \"./store/UserStore\";\nimport LoginForm from \"./LoginForm\";\nimport SubmitButton from \"./SubmitButton\";\nimport \"./App.css\";\n\nimport { AgGridReact } from \"ag-grid-react\";\nimport ColDefinition from \"./store/ColDef\";\nimport \"ag-grid-community/dist/styles/ag-theme-balham-dark.css\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\n\nclass App extends React.Component {\n\n  async componentDidMount() {\n    try {\n      let res = await fetch(\"./isLoggedIn\", {\n        method: \"post\",\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n        UserStore.userPriority = result.userPriority;\n        //validate ag-grid according to user priority\n        if (UserStore.userPriority === 1) {\n          ColDefinition.defaultColDef.editable = true;\n          ColDefinition.columnDefs[0].checkboxSelection = true;\n        }\n        else if (UserStore.userPriority === 2) {\n          ColDefinition.defaultColDef.editable = false;\n          ColDefinition.columnDefs[0].checkboxSelection = false;\n        }\n        //AgGridReact.gridApi.refreshCells();\n      } else {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n      }\n    } catch (e) {\n      UserStore.loading = false;\n      UserStore.isLoggedIn = false;\n    }\n  }\n\n  async doLogout() {\n    try {\n      let res = await fetch(\"./logout\", {\n        method: \"post\",\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.isLoggedIn = false;\n        UserStore.username = \"\";\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  render() {\n    if (UserStore.loading) {\n      return (\n        <div className=\"app\">\n          <div className=\"container\">Loading, please wait...</div>\n        </div>\n      );\n    } else {\n      if (UserStore.isLoggedIn) {\n        return (\n          <div className=\"app\">\n            <div className=\"container\">\n              Welcome {UserStore.username}\n              <SubmitButton\n                text={\"Log out\"}\n                disabled={false}\n                onClick={() => this.doLogout()}\n              />\n\n              <div\n                className=\"ag-theme-balham-dark\"\n                style={{\n                  width: '95%',\n                  height: 600,\n                }}\n              >\n                <AgGridReact\n                  columnDefs={ColDefinition.columnDefs}\n                  rowData={ColDefinition.rowData}\n                  defaultColDef={ColDefinition.defaultColDef}\n                  rowSelection=\"multiple\"\n                  onGridReady={(params) => (this.gridApi = params.api)}\n                />\n              </div>\n            </div>\n          </div>\n        );\n      }\n      return (\n        <div className=\"app\">\n          <div className=\"container\">\n            <LoginForm />\n\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default observer(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}